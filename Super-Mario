#include<stdlib.h>
#include<stdio.h>
#include<queue>
using namespace std;

int solve(char **polje, int** visited, int x, int y, int n, int m){
    queue <pair<int,int> > wait;
    int state=0;
    wait.push(make_pair(x,y));
    while(polje[wait.front().first][wait.front().second]!='I'  && !wait.empty()){
        if(x+1<n && polje[x+1][y] !='#' && visited[x+1][y]==0){
            visited[x+1][y]=1;
            wait.push(make_pair(x+1,y));
        }
        if(x-1>=0 && polje[x-1][y] !='#' && visited[x-1][y]==0){
            visited[x-1][y]=1;
            wait.push(make_pair(x-1,y));
        }
        if(y+1<m && polje[x][y+1] !='#' && visited[x][y+1]==0){
            visited[x][y+1]=1;
            wait.push(make_pair(x,y+1));
        }
        if(y-1>=0 && polje[x][y-1] !='#' && visited[x][y-1]==0){
            visited[x][y-1]=1;
            wait.push(make_pair(x,y-1));
        }
        state++;
        wait.pop();
    }
   return state;
  }

int main()
{
  int n,m,x,y;
  int br=0;
  scanf("%d%d",&n,&m);


  char** polje = new char*[n];
  int** visited = new int*[n];

  for(int i=0; i<n; i++){
    polje[i] = new char[m];
    visited[i] = (int*)calloc(m, sizeof(int));
  }

  for(int i=0; i<n; i++)
    for(int j=0; j<m; j++){
      scanf(" %c",&polje[i][j]);
      if(polje[i][j]=='U'){
        x=i;
        y=j;
      }
    }


  printf("%d",solve(polje,visited,x,y,n,m));
}
